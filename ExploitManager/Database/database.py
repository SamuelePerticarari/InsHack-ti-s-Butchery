class Database(object):
    """docstring for Database."""

    def __init__(self):
        super(Database, self).__init__()

    def connect_to_db( self ):  # ip, port, username, password, database
        raise NotImplementedError( "Implementa questo metodo nel driver..." )

    def close_db( self ):
        raise NotImplementedError( "Implementa questo metodo nel driver..." )

    def setup_db(self):
        raise NotImplementedError( "Implementa questo metodo nel driver..." )

    def get_db( self ):
        raise NotImplementedError( "Implementa questo metodo nel driver..." )

    def list_flags_not_submitted( self ):
        raise NotImplementedError( "Implementa questo metodo nel driver..." )

    def insert_new_flag( self, flag_data, exploit_id, team_id ):
        raise NotImplementedError( "Implementa questo metodo nel driver..." )

    def insert_new_exploit( self, exploit_data, user_id, challenge_id ):
        raise NotImplementedError( "Implementa questo metodo nel driver..." )

    def insert_new_patch( self, patch_data, user_id, challenge_id ):
        raise NotImplementedError( "Implementa questo metodo nel driver..." )

    def insert_new_team( self, team_data ):
        raise NotImplementedError( "Implementa questo metodo nel driver..." )

    def insert_new_challenge( self, challenge_data ):
        raise NotImplementedError( "Implementa questo metodo nel driver..." )

    def list_all_flags( self ):
        raise NotImplementedError( "Implementa questo metodo nel driver..." )

    def count_flags( self ):
        raise NotImplementedError( "Implementa questo metodo nel driver..." )

    def set_flag_status( self, id, state, submitted=1 ):
        raise NotImplementedError( "Implementa questo metodo nel driver..." )

    def get_flag_by_flag(self, flag):
        raise NotImplementedError( "Implementa questo metodo nel driver..." )

    def get_flag_by_id(self, flag_id):
        raise NotImplementedError( "Implementa questo metodo nel driver..." )

    def set_flag_as_submitted( self, flag ):
        return self.set_flag_status(flag, "SUBMITTED")
